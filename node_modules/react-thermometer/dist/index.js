'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Thermometer = function Thermometer(_ref) {
  var min = _ref.min;
  var max = _ref.max;
  var current = _ref.current;
  var fillColor = _ref.fillColor;
  var backgroundColor = _ref.backgroundColor;
  var height = _ref.height;
  var width = _ref.width;

  var totalHeight = height + width * 2.5;
  var bubbleHeight = width * 2.5;
  var unitOfMovement = totalHeight / (max - min);
  var percentageFilled = current / (max - min);
  var pixelsToFill = totalHeight * percentageFilled;
  var bubblePixelsToFill = undefined;
  var restPixelsToFill = undefined;
  if (pixelsToFill < bubbleHeight) {
    bubblePixelsToFill = pixelsToFill;
    restPixelsToFill = 0;
  } else {
    bubblePixelsToFill = bubbleHeight;
    restPixelsToFill = pixelsToFill - bubblePixelsToFill;
  }
  var marginLeft = (width - 20) / 10 * 7.5;
  var style = {
    backgroundColor: backgroundColor,
    height: height,
    width: width,
    borderRadius: '100px 100px 0 0',
    padding: 1,
    marginLeft: marginLeft,
    position: 'relative'
  };

  var fillStyle = {
    backgroundColor: fillColor,
    borderRadius: 100,
    width: width,
    position: 'absolute',
    bottom: 5,
    zIndex: 3,
    height: restPixelsToFill
  };

  var bubbleStyle = {
    backgroundColor: backgroundColor,
    borderRadius: 100,
    height: width * 2.5,
    width: width * 2.5,
    padding: 1,
    position: 'relative',
    top: -width,
    right: 15,
    zIndex: 1
  };

  var bubbleBorderRadius = undefined;
  var unitsOfMovementToCenter = Math.floor(bubbleHeight / 2 / unitOfMovement);
  var startingWidth = bubbleHeight * 0.4;
  var widthIncreasePerMovement = (bubbleHeight - startingWidth) / unitsOfMovementToCenter;
  var bubbleFillWidth = current >= unitsOfMovementToCenter ? width * 2.5 : current * widthIncreasePerMovement + startingWidth;
  var bubbleFillMarginLeft = (bubbleHeight - bubbleFillWidth) / 2;
  var shouldUseCompleteBorderRadius = bubblePixelsToFill / bubbleHeight >= 0.8;
  if (shouldUseCompleteBorderRadius) {
    bubbleBorderRadius = 100;
  } else {
    bubbleBorderRadius = '0 0 100px 100px';
  }
  var bubbleFill = {
    backgroundColor: fillColor,
    borderRadius: bubbleBorderRadius,
    height: bubblePixelsToFill,
    marginTop: bubbleHeight - bubblePixelsToFill,
    marginLeft: bubbleFillMarginLeft,
    width: bubbleFillWidth,
    zIndex: 2
  };
  return _react2['default'].createElement(
    'div',
    null,
    _react2['default'].createElement(
      'div',
      { style: style },
      _react2['default'].createElement('div', { style: fillStyle })
    ),
    _react2['default'].createElement(
      'div',
      { style: bubbleStyle },
      _react2['default'].createElement('div', { style: bubbleFill })
    )
  );
};

exports['default'] = Thermometer;
module.exports = exports['default'];